name: Build and Run Singularity Container

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-run:
    #runs-on: self-hosted
   # runs-on: ubuntu-24.04
    runs-on: ubuntu-latest #GitHub-hosted runner

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Checkout code with submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Show submodule status
      run: git submodule status

    - name: Install dependencies for Singularity
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          uuid-dev build-essential libseccomp-dev pkg-config \
          squashfs-tools cryptsetup curl wget git uidmap runc openssh-client

    - name: Install Go
      run: |
        export GOVERSION=1.17.3 OS=linux ARCH=amd64
        wget -O /tmp/go${GOVERSION}.${OS}-${ARCH}.tar.gz \
          https://dl.google.com/go/go${GOVERSION}.${OS}-${ARCH}.tar.gz
        sudo tar -C /usr/local -xzf /tmp/go${GOVERSION}.${OS}-${ARCH}.tar.gz

    - name: Setup Go Environment
      run: echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.bashrc && source ~/.bashrc

    - name: Install Singularity
      run: |
        wget https://github.com/sylabs/singularity/releases/download/v4.1.3/singularity-ce_4.1.3-focal_amd64.deb
        sudo apt-get install -y libfuse2 fuse2fs
        sudo dpkg -i singularity-ce_4.1.3-focal_amd64.deb || true
        sudo apt-get install -f -y

    - name: Verify Singularity version
      run: singularity --version

    - name: Build Singularity Image
      run: sudo singularity build grayscale.sif Singularity.def

    - name: Run Application in Singularity
      run: singularity run grayscale.sif input output Average

    - name: Upload output images
      uses: actions/upload-artifact@v4
      with:
        name: pgm-results
        path: output/

    - name: Upload grayscale.sif
      uses: actions/upload-artifact@v4
      with:
        name: grayscale-sif
        path: grayscale.sif

    - name: Convert job.sh to UNIX line endings
      run: dos2unix job.sh || true

    - name: Setup SSH key, cert, and config
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.G100_SSH_KEY }}" > ~/.ssh/my_key
        echo "${{ secrets.G100_SSH_CERT }}" > ~/.ssh/my_key-cert.pub
        echo "${{ secrets.G100_SSH_PUB }}" > ~/.ssh/my_key.pub
        chmod 600 ~/.ssh/my_key
        chmod 644 ~/.ssh/my_key-cert.pub ~/.ssh/my_key.pub

        cat <<EOF > ~/.ssh/config
        Host galileo
          HostName ${{ secrets.SLURM_HOST }}
          User ${{ secrets.SLURM_USER }}
          IdentityFile ~/.ssh/my_key
          CertificateFile ~/.ssh/my_key-cert.pub
          IdentitiesOnly yes
          StrictHostKeyChecking no
          UserKnownHostsFile=/dev/null
        EOF

    - name: Ensure ~/seproject exists on Galileo
      run: |
        ssh -F ~/.ssh/config galileo "mkdir -p ~/seproject"

    - name: Transfer job script and sif file to cluster via scp
      run: |
        scp -F ~/.ssh/config grayscale.sif job.sh galileo:~/seproject/

    - name: Submit job to cluster via SSH
      run: |
        ssh -F ~/.ssh/config galileo "cd ~/seproject && sbatch job.sh"
